/**
 * BASE CONTAINER MODULE
 * =====================
 * Foundation styles for all container layouts
 * Provides consistent structure and spacing
 * 
 * Created: 2025-08-22
 */

/* ============================================
   BASE CONTAINER
   ============================================ */
.baseContainer {
  min-height: 100vh;
  width: 100%;
  position: relative;
  background: var(--bg-primary);
  overflow-x: hidden;
  transition: background var(--duration-base) var(--easing-out);
}

/* Container with gradient backgrounds */
.baseContainer.learn {
  background: var(--bg-gradient-learn);
}

.baseContainer.experience {
  background: var(--bg-gradient-experience);
}

.baseContainer.discover {
  background: var(--bg-gradient-discover);
}

/* ============================================
   CONTAINER WRAPPER
   ============================================ */
.containerWrapper {
  max-width: var(--container-max-width);
  margin: 0 auto;
  padding: var(--space-6);
  position: relative;
  z-index: 1;
}

.containerWrapper.withSidebar {
  display: grid;
  grid-template-columns: 1fr 300px;
  gap: var(--space-6);
}

/* ============================================
   CONTAINER HEADER
   ============================================ */
.containerHeader {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  height: var(--header-height);
  background: var(--header-bg);
  backdrop-filter: blur(10px);
  border-bottom: 1px solid var(--border-color);
  z-index: var(--z-40);
  transition: all var(--duration-base) var(--easing-out);
}

.containerHeader.transparent {
  background: transparent;
  border-bottom: none;
}

/* ============================================
   MAIN CONTENT AREA
   ============================================ */
.mainContent {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: var(--space-6);
  animation: fadeIn var(--duration-base) var(--easing-out);
}

.mainContent.withHeader {
  padding-top: calc(var(--header-height) + var(--space-4));
}

/* ============================================
   SIDEBAR
   ============================================ */
.sidebar {
  position: sticky;
  top: calc(var(--header-height) + var(--space-4));
  height: fit-content;
  max-height: calc(100vh - var(--header-height) - var(--space-8));
  overflow-y: auto;
}

.sidebar::-webkit-scrollbar {
  width: 4px;
}

.sidebar::-webkit-scrollbar-track {
  background: var(--bg-secondary);
  border-radius: 2px;
}

.sidebar::-webkit-scrollbar-thumb {
  background: var(--border-color);
  border-radius: 2px;
}

/* ============================================
   FLOATING ELEMENTS CONTAINER
   ============================================ */
.floatingElements {
  position: fixed;
  pointer-events: none;
  z-index: var(--z-30);
}

.floatingElements > * {
  pointer-events: auto;
}

/* ============================================
   BACKGROUND DECORATIONS
   ============================================ */
.backgroundDecoration {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  z-index: 0;
  opacity: 0.1;
}

.backgroundPattern {
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: 
    radial-gradient(circle at 20% 50%, var(--color-primary) 0%, transparent 50%),
    radial-gradient(circle at 80% 80%, var(--color-secondary) 0%, transparent 50%),
    radial-gradient(circle at 40% 20%, var(--color-tertiary) 0%, transparent 50%);
  opacity: 0.05;
  animation: float 20s ease-in-out infinite;
}

@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-20px); }
}

/* ============================================
   PHASE TRANSITIONS
   ============================================ */
.phaseTransition {
  animation: slideIn var(--duration-moderate) var(--easing-out);
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* ============================================
   RESPONSIVE DESIGN
   ============================================ */
@media (max-width: 1024px) {
  .containerWrapper.withSidebar {
    grid-template-columns: 1fr;
  }
  
  .sidebar {
    position: relative;
    top: 0;
    max-height: none;
  }
}

@media (max-width: 768px) {
  .containerWrapper {
    padding: var(--space-4);
  }
  
  .mainContent {
    gap: var(--space-4);
  }
}

@media (max-width: 480px) {
  .containerWrapper {
    padding: var(--space-3);
  }
  
  .baseContainer {
    min-height: 100vh;
  }
}

/* ============================================
   UTILITY CLASSES
   ============================================ */
.centered {
  display: flex;
  justify-content: center;
  align-items: center;
}

.fullHeight {
  min-height: 100vh;
}

.noPadding {
  padding: 0;
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}